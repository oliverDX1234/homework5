name: CI/CD for Laravel on Kubernetes

on:
  push:
    branches:
      - main  # ‚úÖ Runs on push to `main`
  pull_request:
    branches:
      - main  # ‚úÖ Runs on PRs targeting `main`

env:
  DOCKER_IMAGE: oliverdx1234/laravel-app

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v4

      - name: üîë Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: üõ†Ô∏è Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: üèóÔ∏è Build & Tag Docker Image
        run: |
          DOCKER_TAG=$(git rev-parse --short HEAD)
          echo "DOCKER_TAG=$DOCKER_TAG" >> $GITHUB_ENV
          docker build -t $DOCKER_IMAGE:$DOCKER_TAG -f laravel-app/Dockerfile laravel-app/
          docker tag $DOCKER_IMAGE:$DOCKER_TAG $DOCKER_IMAGE:latest

      - name: üöÄ Start Laravel App (for DB setup & testing)
        run: docker-compose -f docker-compose.yml up -d

      - name: ‚öôÔ∏è Prepare Laravel Storage & Migrations
        run: |
          docker exec laravel-app php artisan migrate --force
          docker exec laravel-app php artisan cache:clear
          docker exec laravel-app php artisan config:clear
          docker exec laravel-app php artisan route:clear
          docker exec laravel-app php artisan view:clear

      - name: ‚úÖ Run Feature Tests
        run: |
          docker exec laravel-app vendor/bin/phpunit
          docker-compose -f docker-compose.yml down  # Stop the container after tests

      - name: üöÄ Push Docker Image to Docker Hub
        run: |
          docker push $DOCKER_IMAGE:$DOCKER_TAG
          docker push $DOCKER_IMAGE:latest

      - name: üìÇ Set up Kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG }}" | base64 --decode > kubeconfig.yaml
          export KUBECONFIG=$(pwd)/kubeconfig.yaml
          chmod 600 kubeconfig.yaml  
          kubectl config set-cluster minikube --server=$(kubectl config view --minify -o jsonpath='{.clusters[0].cluster.server}') --insecure-skip-tls-verify=true

      - name: üõ†Ô∏è Deploy to Kubernetes
        run: |
          export KUBECONFIG=$(pwd)/kubeconfig.yaml
          sed -i "s|image: $DOCKER_IMAGE:.*|image: $DOCKER_IMAGE:$DOCKER_TAG|" k8s/laravel-app.yaml

          kubectl apply --validate=false -f k8s/secrets.yaml
          kubectl apply --validate=false -f k8s/app-pvc.yaml
          kubectl apply --validate=false -f k8s/nginx-config.yaml
          kubectl apply --validate=false -f k8s/mysql-pvc.yaml
          kubectl apply --validate=false -f k8s/mysql.yaml

          kubectl wait --for=condition=ready pod -l app=mysql --timeout=300s

          kubectl apply --validate=false -f k8s/laravel-app.yaml
          kubectl apply --validate=false -f k8s/nginx.yaml
          kubectl apply --validate=false -f k8s/ingress.yaml

          kubectl rollout restart deployment/laravel-app
